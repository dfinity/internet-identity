version: "3.9"
services:
  # service hosting dfx running II and the test app
  # canister ids are assigned deterministically on startup, so we can hardcode them

  # Nginx proxy to terminate tls and transform domains to *.localhost
  nginx:
    build: reverse_proxy
    ports:
      - "8443:443"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      ic:
        aliases:
          - ic0.app
          # internet identity, II_CANISTER_ID is substituted by the start-selenium-env script
          - II_CANISTER_ID.ic0.app
          - identity.ic0.app
          # test app, TEST_APP_CANISTER_ID is substituted by the start-selenium-env script
          - TEST_APP_CANISTER_ID.ic0.app
          - nice-name.com
          # also handle the *.raw origins, but nginx will just respond with status 400
          - identity.raw.ic0.app
          - II_CANISTER_ID.raw.ic0.app
          - TEST_APP_CANISTER_ID.raw.ic0.app

  # Selenium container with chromedriver and chrome
  selenium:
    # use the seleniarm image that provides multiple architecture variants including one for M1 chips
    image: seleniarm/standalone-chromium:104.0
    ports:
      - "4444:4444" # port for the test runner to connect to chromedriver
      - "7900:7900" # port to access the page to watch what chrome is doing (http://localhost:7900, pw is secret)
    shm_size: '2gb' # allow more memory for chrome to actually render the pages
    environment: # default number of sessions is 1. We need more because of flows involving multiple devices (which we simulate using parallel sessions).
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_SESSIONS=5
    networks:
      - ic
networks:
  ic:
