#!/usr/bin/env bash

set -euo pipefail


SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
DFX_NETWORK="local"
DFX_IDENTITY="$(dfx identity whoami)"
DFX_PRINCIPAL="stddx-cogxm-gx2gj-whqcw-vzybl-6h463-y7lil-pgjvc-pkyni-7t6q2-uqe"
IDENTITY_PUB_KEY_FILE="$(mktemp)"

source "$SOURCE_DIR/lib.sh"

clean_up() {
  rm "$IDENTITY_PUB_KEY_FILE"
}

trap clean_up EXIT

echo "Adding an anchor on network [$DFX_NETWORK] using identity [$DFX_IDENTITY] and principal [$DFX_PRINCIPAL]"
dfx identity export "$DFX_IDENTITY" | openssl ec -out "$IDENTITY_PUB_KEY_FILE" -pubout -outform der # 2>/dev/null

echo "Fetching captcha."
CHALLENGE_KEY="$(dfx canister call internet_identity create_challenge --network "$DFX_NETWORK" | idl2json | jq -r .challenge_key)"
log "DFX_PRINCIPAL=$DFX_PRINCIPAL"
log "CHALLENGE_KEY=$CHALLENGE_KEY"

PUB_KEY_BLOB=$(hexdump -ve '1/1 "%.2x"' "$IDENTITY_PUB_KEY_FILE")
PUB_KEY_BLOB="3056301006072a8648ce3d020106052b8104000a03420004781c320181dd5f83b22a51a9934a63a0ea8475a10d9f1bb7334efdee611698bb6c61742d8846941d65e2a3dee775cf07f84b8afad760c96b98d079c64608c7e2"
PUB_KEY_BLOB="$(echo $PUB_KEY_BLOB | sed 's/../\\&/g')"
log "PUB_KEY_BLOB=$PUB_KEY_BLOB"

echo "Creating anchor."
ANCHOR="$(dfx canister call internet_identity register "(record{pubkey=blob \"${PUB_KEY_BLOB}\";alias=\"dfx test key\";purpose=variant{authentication};key_type=variant{unknown};protection=variant{unprotected};},record{key=\"${CHALLENGE_KEY}\";chars=\"a\"}, opt principal \"${DFX_PRINCIPAL}\")" --network "$DFX_NETWORK" | idl2json | jq -r .registered.user_number)"

# This matches the dummy key pair generated by Internet Identity here:
# https://github.com/dfinity/internet-identity/blob/1ce860dd0601312f6521d433c4e273215a1abc5d/src/frontend/src/utils/iiConnection.ts#L57
DUMMY_PUB_KEY_BLOB='0*0\05\06\03+ep\03!\00;j\27\bc\ce\b6\a4-b\a3\a8\d0*o\0dse2\15w\1d\e2C\a6:\c0H\a1\8bY\da)'

# This is arbitrary as long as it's different from the public key above.
# We won't actually use the seed phrase. We just want to skip the warning that
# we don't have a key phrase.
SEED_PHRASE_PUB_KEY_BLOB='00000000000000000000000000000000000000000000'

add_device() {
  DEVICE_PUB_KEY_BLOB="$1"
  DEVICE_KEY_TYPE="$2"
  DEVICE_PURPOSE="$3"
  local command
  command=(dfx canister call internet_identity add "(${ANCHOR}, record { alias = \"\"; protection = variant { unprotected }; pubkey = blob \"${DEVICE_PUB_KEY_BLOB}\"; key_type = variant { ${DEVICE_KEY_TYPE} }; purpose = variant { ${DEVICE_PURPOSE} }; })" --network "$DFX_NETWORK")
  "${command[@]}" >/dev/null
}

echo "Adding backup device for anchor $ANCHOR."
add_device "$DUMMY_PUB_KEY_BLOB" unknown authentication
echo "Adding seed phrase for anchor $ANCHOR."
add_device "$SEED_PHRASE_PUB_KEY_BLOB" seed_phrase recovery
log "export ANCHOR=$ANCHOR"
