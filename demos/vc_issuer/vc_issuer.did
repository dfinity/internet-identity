type ConsentData = record { consent_message : text; language : text };
type ConsentMessageRequest = record { preferences : ConsentPreferences };
type ConsentPreferences = record { language : text };
type CredentialData = record { vc_jwt : text };
type CredentialSpec = record { info : text };
type IssueCredentialRequest = record {
    signed_id_alias : SignedIdAlias;
    credential_spec : CredentialSpec;
};
type IssueCredentialResponse = variant { Ok : CredentialData; Err : text };
type ManifestData = record { consent_info : ConsentData };
type ManifestRequest = record {
    consent_message_request : ConsentMessageRequest;
};
type ManifestResponse = variant { Ok : ManifestData; Err : text };
type SignedIdAlias = record {
    signature : vec nat8;
    id_alias : principal;
    id_dapp : principal;
};
service : {
    get_manifest : (ManifestRequest) -> (ManifestResponse);
    issue_credential : (IssueCredentialRequest) -> (IssueCredentialResponse);
}
