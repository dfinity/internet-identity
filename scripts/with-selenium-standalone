#!/usr/bin/env bash
#
# A script that starts and stops selenium-standalone.
#
# Usage:
#
#   ./scripts/with-selenium-standalone <subcommand> ...
#
# After starting selenium-standalone, we wait for it to output a specific message
# ("Selenium started"), after which we know selenium itself was started. At this point
# we can start the subcommand.
#

selenium_standalone_args=("start" "--config" "./selenium-standalone.config.js")

echo "selenium-standalone" "${selenium_standalone_args[@]}"

sout=$(mktemp)
serr=$(mktemp)

if selenium-standalone "${selenium_standalone_args[@]}" \
    2> $serr \
    > $sout \
    &
then
    pid=$!
    echo "selenium-standalone started with pid $pid"

    attempts=0
    while grep -q 'Selenium started' "$sout"
    do
        attempts=$((attempts+1))
        if [ $attempts -le 5 ]
        then
            echo "selenium-standalone is not ready yet, retrying ($attempts)"
            sleep 1
        else
            echo "selenium-standalone didn't start successfully"
            kill "$pid"
            echo "logs can be found here:"
            echo "$sout"
            echo "$serr"
            exit 1
        fi
    done

    echo "selenium standalone is running"

    "$@"

    kill "$pid"
    touch "$serr" && rm "$serr"
    rm "$sout"

else
    echo "Could not start selenium-standalone server"
    echo "$sout"
    echo "$serr"
    exit 1
fi
