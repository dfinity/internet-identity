diff --git a/src/internet_identity/internet_identity.did b/src/internet_identity/internet_identity.did
index c1bf6d34..60bd6b90 100644
--- a/src/internet_identity/internet_identity.did
+++ b/src/internet_identity/internet_identity.did
@@ -320,21 +320,21 @@ type PublicKeyAuthn = record {
 
 // The authentication methods currently supported by II.
 type AuthnMethod = variant {
-    WebAuthn: WebAuthn;
-    PubKey: PublicKeyAuthn;
+    webauthn: WebAuthn;
+    pubkey: PublicKeyAuthn;
 };
 
 // This describes whether an authentication method is "protected" or not.
 // When protected, a authentication method can only be updated or removed if the
 // user is authenticated with that very authentication method.
 type AuthnMethodProtection = variant {
-    Protected;
-    Unprotected;
+    protected;
+    unprotected;
 };
 
 type AuthnMethodPurpose = variant {
-    Recovery;
-    Authentication;
+    recovery;
+    authentication;
 };
 
 type AuthnMethodSecuritySettings = record {
@@ -344,7 +344,8 @@ type AuthnMethodSecuritySettings = record {
 
 type AuthnMethodData = record {
     authn_method: AuthnMethod;
-    security_settings: AuthnMethodSecuritySettings;
+    protection: AuthnMethodProtection;
+    purpose: AuthnMethodPurpose;
     // contains the following fields of the DeviceWithUsage type:
     // - alias
     // - origin
@@ -352,7 +353,7 @@ type AuthnMethodData = record {
     // - usage: data taken from key_type and reduced to "recovery_phrase", "browser_storage_key" or absent on migration
     // Note: for compatibility reasons with the v1 API, the entries above (if present)
     // must be of the `String` variant. This restriction may be lifted in the future.
-    metadata: MetadataMapV2;
+    metadata: MetadataMap;
     last_authentication: opt Timestamp;
 };
 
@@ -433,8 +434,8 @@ type PrepareIdAliasRequest = record {
 };
 
 type PrepareIdAliasError = variant {
-    /// The caller is not authorized to call this method with the given arguments.
-    Unauthorized;
+    /// Caller authentication failed.
+    AuthenticationFailed : text;
 };
 
 /// The prepared id alias contains two (still unsigned) credentials in JWT format,
@@ -457,8 +458,8 @@ type GetIdAliasRequest = record {
 };
 
 type GetIdAliasError = variant {
-    /// The caller is not authorized to call this method with the given arguments.
-    Unauthorized;
+    /// Caller authentication failed.
+    AuthenticationFailed : text;
     /// The credential(s) are not available: may be expired or not prepared yet (call prepare_id_alias to prepare).
     NoSuchCredentials : text;
 };
@@ -534,7 +535,7 @@ service : (opt InternetIdentityInit) -> {
     // Replaces the authentication method independent metadata map.
     // The existing metadata map will be overwritten.
     // Requires authentication.
-    identity_metadata_replace: (IdentityNumber, MetadataMapV2) -> (variant {Ok; Err;});
+    identity_metadata_replace: (IdentityNumber, MetadataMap) -> (variant {Ok; Err;});
 
     // Adds a new authentication method to the identity.
     // Requires authentication.
