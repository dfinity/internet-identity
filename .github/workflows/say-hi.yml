name: Say Hi

on:
  pull_request:

jobs:
  comment:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const DIVIDER = "\n<!-- DIVIDER " + context.issue.number + "-->\n";
            const pr = await github.rest.issues.get({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const [ descr, _outdated ] = pr.data.body.split(DIVIDER);
            const newSection = "Hello, world!";
            const newBody = [descr, newSection].join(DIVIDER);
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: newBody,
            });






            const result = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "github-pages",
            });
            const artifactsByBranch = result.data.artifacts
              .filter(artifact => !artifact.expired)
              .group(artifact => artifact.workflow_run.head_branch);

            const artifacts = [];

            for(const branch in artifactsByBranch) {
              const branchArtifacts = [...artifactsByBranch[branch]];
              branchArtifacts.sort((a,b) => new Date(a.updated_at) - new Date(b.updated_at));
              const latestBranchArtifact = branchArtifacts[0];
              console("latest artifact in ", branch, latestBranchArtifact);
              artifacts.push(latestBranchArtifact);
            }

            artifacts.forEach( async (artifact) => {
              const name = artifact.name;
              const artifactId = artifact.id;
              const br = artifact.workflow_run.head_branch;
              console.log(artifact.name, artifactId);
              console.log(artifact.expires_at);
              console.log(br);
              const { url } = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifactId,
                archive_format: "zip",
              });
            });
